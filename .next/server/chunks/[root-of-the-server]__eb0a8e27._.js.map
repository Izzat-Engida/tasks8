{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/lib/authOptions.ts"],"sourcesContent":["import NextAuth, { NextAuthOptions } from \"next-auth\";\r\nimport GoogleProvider from \"next-auth/providers/google\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\n\r\n\r\ndeclare module \"next-auth\" {\r\n  interface Session {\r\n    user: {\r\n      id: string;\r\n      email: string;\r\n      name: string;\r\n    };\r\n    accessToken: string;\r\n    refreshToken: string;\r\n  }\r\n\r\n  interface User {\r\n    id: string;\r\n    email: string;\r\n    name: string;\r\n    accessToken: string;\r\n    refreshToken: string;\r\n  }\r\n}\r\n\r\ndeclare module \"next-auth/jwt\" {\r\n  interface JWT {\r\n    id: string;\r\n    accessToken: string;\r\n    accessTokenExpires?: number;\r\n  }\r\n}\r\n\r\nexport const authOptions: NextAuthOptions = {\r\n  providers: [\r\n    GoogleProvider({\r\n      clientId: process.env.GOOGLE_ID!,\r\n      clientSecret: process.env.GOOGLE_SECRET!,\r\n    }),\r\n\r\n    CredentialsProvider({\r\n      name: \"Credentials\",\r\n      credentials: {\r\n        email: { label: \"Email\", type: \"email\" },\r\n        password: { label: \"Password\", type: \"password\" },\r\n      },\r\n      async authorize(credentials) { //weird thing here i used axios instead of fetch and it did not work\r\n          const res = await fetch(\"https://akil-backend.onrender.com/login\", {\r\n            method:\"POST\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify({\r\n              email:credentials?.email,\r\n              password:credentials?.password,\r\n            })})\r\n            const data=await res.json();\r\n            console.log(\"login \",data)\r\n            if(data.success && data.data?.accessToken){\r\n              return{\r\n                id:data.data.id,\r\n                email:credentials?.email,\r\n                accessToken:data.data.accessToken,\r\n                refreshToken:data.data.refreshToken,\r\n              }\r\n            }\r\n        \r\n            return null;\r\n         \r\n      },\r\n    }),\r\n  ],\r\n  session:{\r\n    strategy:\"jwt\",\r\n  },\r\n  pages: {\r\n    signIn: \"/\", \r\n    error: \"/api/auth/error\", \r\n  },\r\n\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.id = user.id;\r\n        token.accessToken = user.accessToken;\r\n        token.refreshToken = user.refreshToken;\r\n        token.accessTokenExpires = Date.now() + 3600 * 1000; \r\n      }\r\n      return token;\r\n    },\r\n\r\n    async session({ session, token }) {\r\n      session.user.id = token.id as string;\r\n      session.accessToken = token.accessToken as string;\r\n      session.refreshToken = token.refreshToken as string;\r\n      return session;\r\n    },\r\n  },\r\n\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n};\r\nexport default NextAuth(authOptions);\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AA+BO,MAAM,cAA+B;IAC1C,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QACzC;QAEA,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACvB,MAAM,MAAM,MAAM,MAAM,2CAA2C;oBACjE,QAAO;oBACP,SAAQ;wBAAC,gBAAe;oBAAkB;oBAC1C,MAAK,KAAK,SAAS,CAAC;wBAClB,OAAM,aAAa;wBACnB,UAAS,aAAa;oBACxB;gBAAE;gBACF,MAAM,OAAK,MAAM,IAAI,IAAI;gBACzB,QAAQ,GAAG,CAAC,UAAS;gBACrB,IAAG,KAAK,OAAO,IAAI,KAAK,IAAI,EAAE,aAAY;oBACxC,OAAM;wBACJ,IAAG,KAAK,IAAI,CAAC,EAAE;wBACf,OAAM,aAAa;wBACnB,aAAY,KAAK,IAAI,CAAC,WAAW;wBACjC,cAAa,KAAK,IAAI,CAAC,YAAY;oBACrC;gBACF;gBAEA,OAAO;YAEb;QACF;KACD;IACD,SAAQ;QACN,UAAS;IACX;IACA,OAAO;QACL,QAAQ;QACR,OAAO;IACT;IAEA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,WAAW,GAAG,KAAK,WAAW;gBACpC,MAAM,YAAY,GAAG,KAAK,YAAY;gBACtC,MAAM,kBAAkB,GAAG,KAAK,GAAG,KAAK,OAAO;YACjD;YACA,OAAO;QACT;QAEA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;YAC1B,QAAQ,WAAW,GAAG,MAAM,WAAW;YACvC,QAAQ,YAAY,GAAG,MAAM,YAAY;YACzC,OAAO;QACT;IACF;IAEA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC;uCACe,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport { authOptions } from \"@/app/lib/authOptions\";\r\n\r\nconst handler=NextAuth(authOptions);\r\n\r\nexport {handler as GET,handler as POST}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,UAAQ,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE,2HAAA,CAAA,cAAW","debugId":null}}]
}