{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/lib/jobs.ts"],"sourcesContent":["import {Posting,JobData} from '@/app/types/job'\r\nexport async function getAllJobPostings():Promise<Posting[]>{\r\n    const res = await fetch(\r\n    \"https://akil-backend.onrender.com/opportunities/search\",\r\n    {\r\n      cache: 'force-cache'\r\n    }\r\n  );\r\n   let rdata: JobData;\r\n  try {\r\n    rdata = await res.json();\r\n  } catch (e) {\r\n    console.error(\"Response is not valid JSON:\", e);\r\n    throw new Error(\"Failed to parse job postings data as JSON.\");\r\n  }\r\n\r\n  if (!rdata || !Array.isArray(rdata.data)) {\r\n    throw new Error(\"Job postings data is not in the expected format.\");\r\n  }\r\n  const job_postings_with_index: Posting[] = rdata.data.map((job, index) => ({\r\n    ...job,\r\n    id: index,\r\n    startDate: new Date(job.startDate),\r\n    endDate: new Date(job.endDate),\r\n    deadline: new Date(job.deadline),\r\n    datePosted: new Date(job.datePosted),\r\n    createdAt: new Date(job.createdAt),\r\n    updatedAt: new Date(job.updatedAt),\r\n  }));\r\n  return job_postings_with_index;\r\n\r\n}\r\nexport async function  getJobByIndex(index:number):Promise<Posting|undefined>{\r\n    const jo=await getAllJobPostings();\r\n    return jo.find(job=>job.id==index)\r\n}"],"names":[],"mappings":";;;;AACO,eAAe;IAClB,MAAM,MAAM,MAAM,MAClB,0DACA;QACE,OAAO;IACT;IAED,IAAI;IACL,IAAI;QACF,QAAQ,MAAM,IAAI,IAAI;IACxB,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI,CAAC,SAAS,CAAC,MAAM,OAAO,CAAC,MAAM,IAAI,GAAG;QACxC,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,0BAAqC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,QAAU,CAAC;YACzE,GAAG,GAAG;YACN,IAAI;YACJ,WAAW,IAAI,KAAK,IAAI,SAAS;YACjC,SAAS,IAAI,KAAK,IAAI,OAAO;YAC7B,UAAU,IAAI,KAAK,IAAI,QAAQ;YAC/B,YAAY,IAAI,KAAK,IAAI,UAAU;YACnC,WAAW,IAAI,KAAK,IAAI,SAAS;YACjC,WAAW,IAAI,KAAK,IAAI,SAAS;QACnC,CAAC;IACD,OAAO;AAET;AACO,eAAgB,cAAc,KAAY;IAC7C,MAAM,KAAG,MAAM;IACf,OAAO,GAAG,IAAI,CAAC,CAAA,MAAK,IAAI,EAAE,IAAE;AAChC","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/components/ClientSorter.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/ClientSorter.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ClientSorter.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/components/ClientSorter.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/ClientSorter.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ClientSorter.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/api/auth/%5B...nextauth%5D/authOptions.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport GoogleProvider from \"next-auth/providers/google\";\r\nimport EmailProvider from \"next-auth/providers/email\";\r\nimport { Resend } from \"resend\";\r\n\r\nconst resend = new Resend(process.env.RESEND_API_KEY!);\r\n\r\nexport const authOptions = {\r\n  providers: [\r\n    GoogleProvider({\r\n      clientId: process.env.GOOGLE_ID!,\r\n      clientSecret: process.env.GOOGLE_SECRET!,\r\n    }),\r\n    EmailProvider({\r\n      from: process.env.EMAIL_FROM!,\r\n      async sendVerificationRequest({ identifier, url, provider }) {\r\n        const { host } = new URL(url);\r\n\r\n        await resend.emails.send({\r\n          from: provider.from,\r\n          to: identifier,\r\n          subject: `Sign in to ${host}`,\r\n          html: `\r\n            <div style=\"font-family: sans-serif; line-height: 1.4\">\r\n              <h2>Sign in to ${host}</h2>\r\n              <p>Click the link below to sign in:</p>\r\n              <p><a href=\"${url}\" style=\"color: blue;\">Sign in</a></p>\r\n              <p>If you didn't request this email, you can ignore it.</p>\r\n            </div>\r\n          `,\r\n        });\r\n      },\r\n    }),\r\n  ],\r\n  pages: {\r\n    signIn: \"/auth/signin\",\r\n    verifyRequest: \"/verify\",\r\n  },\r\n  callbacks: {\r\n    async session({ session, token }) {\r\n      if (token?.sub) session.user.id = token.sub;\r\n      return session;\r\n    },\r\n  },\r\n};\r\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEA,MAAM,SAAS,IAAI,wIAAA,CAAA,SAAM,CAAC,QAAQ,GAAG,CAAC,cAAc;AAE7C,MAAM,cAAc;IACzB,WAAW;QACT,CAAA,GAAA,mJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QACzC;QACA,CAAA,GAAA,kJAAA,CAAA,UAAa,AAAD,EAAE;YACZ,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B,MAAM,yBAAwB,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE;gBACzD,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,IAAI;gBAEzB,MAAM,OAAO,MAAM,CAAC,IAAI,CAAC;oBACvB,MAAM,SAAS,IAAI;oBACnB,IAAI;oBACJ,SAAS,CAAC,WAAW,EAAE,MAAM;oBAC7B,MAAM,CAAC;;6BAEY,EAAE,KAAK;;0BAEV,EAAE,IAAI;;;UAGtB,CAAC;gBACH;YACF;QACF;KACD;IACD,OAAO;QACL,QAAQ;QACR,eAAe;IACjB;IACA,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO,KAAK,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG;YAC3C,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/page.tsx"],"sourcesContent":["import { getAllJobPostings } from \"./lib/jobs\";\r\nimport { Posting } from \"./types/job\";\r\nimport ClientSorter from \"./components/ClientSorter\"; \r\nimport { getServerSession } from \"next-auth\";\r\nimport authOptions  from \"./api/auth/[...nextauth]/authOptions\";\r\nimport {redirect} from 'next/navigation'\r\n\r\nexport default async function Home() {\r\n  const session =await getServerSession(authOptions);\r\n  if(!session){\r\n    redirect('./SignUp')\r\n  }\r\n  const data: Posting[] = await getAllJobPostings();\r\n\r\n  return (\r\n    <div className=\"gap-[40px] pt-[72px] pb-[72px] pl-[124px] pr-[123px]\">\r\n      <ClientSorter jobs={data} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AACA;AAAA;;;;;;;AAEe,eAAe;IAC5B,MAAM,UAAS,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,uJAAA,CAAA,UAAW;IACjD,IAAG,CAAC,SAAQ;QACV,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IACA,MAAM,OAAkB,MAAM,CAAA,GAAA,kHAAA,CAAA,oBAAiB,AAAD;IAE9C,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,kIAAA,CAAA,UAAY;YAAC,MAAM;;;;;;;;;;;AAG1B","debugId":null}}]
}