{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/task4/job/app/context/context.tsx"],"sourcesContent":["import React,{createContext,useContext,useState,ReactNode} from 'react'\r\ntype Posting = {\r\n  id:number;\r\n  title: string;\r\n  description: string;\r\n  responsibilities: string[];\r\n  ideal_candidate: {\r\n    age: string;\r\n    gender: string;\r\n    traits: string[];\r\n  };\r\n  when_where: string;\r\n  about: {\r\n    posted_on: Date;\r\n    deadline: Date;\r\n    location: string;\r\n    start_date: string;\r\n    end_date: string;\r\n    categories: string[];\r\n    required_skills: string[];\r\n  };\r\n  company: string;\r\n  image: string;\r\n};\r\ntype JobContext={\r\n    selectedJob:Posting|null;\r\n    setSelectedJob:(job:Posting)=>void;\r\n}\r\nconst Jobc=createContext<JobContext|undefined>(undefined);\r\nexport function context({children}:{children:ReactNode}) {\r\n    const [selectedJob,setSelectedJob]=useState<Posting|null>(null);\r\n  return (\r\n    <Jobc.Provider value={{selectedJob,setSelectedJob}}>\r\n        {children}\r\n    </Jobc.Provider>\r\n  )\r\n}\r\n\r\nexport function useJob(){\r\n    const contex=useContext(Jobc);\r\n    if(!contex){\r\n        throw new Error('error in usejob')\r\n    }\r\n    return contex;\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;;AA4BA,MAAM,qBAAK,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAwB;AACxC,SAAS,QAAQ,EAAC,QAAQ,EAAsB;IACnD,MAAM,CAAC,aAAY,eAAe,GAAC,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IAC5D,qBACE,8OAAC,KAAK,QAAQ;QAAC,OAAO;YAAC;YAAY;QAAc;kBAC5C;;;;;;AAGT;AAEO,SAAS;IACZ,MAAM,SAAO,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IACxB,IAAG,CAAC,QAAO;QACP,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/task4/job/app/components/CardComponent.tsx"],"sourcesContent":["'useclient'\r\nimport React from 'react';\r\nimport Link from 'next/link'\r\nimport {useRouter} from 'next/router'\r\nimport { useJob } from '../context/context';\r\ntype Posting = {\r\n  id:number;\r\n  title: string;\r\n  description: string;\r\n  responsibilities: string[];\r\n  ideal_candidate: {\r\n    age: string;\r\n    gender: string;\r\n    traits: string[];\r\n  };\r\n  when_where: string;\r\n  about: {\r\n    posted_on: Date;\r\n    deadline: Date;\r\n    location: string;\r\n    start_date: string;\r\n    end_date: string;\r\n    categories: string[];\r\n    required_skills: string[];\r\n  };\r\n  company: string;\r\n  image: string;\r\n};\r\n\r\ntype Props = {\r\n  job: Posting;\r\n};\r\n\r\nfunction CardComponent({ job }: Props,) {\r\n    const router=useRouter()\r\n    const {setSelectedJob}=useJob()\r\n    const handleClick=()=>{\r\n        setSelectedJob(job)\r\n        router.push('/description');\r\n    }\r\n  return (\r\n \r\n  <div className=\"block p-4 border rounded hover:bg-gray-100\">\r\n    <h2>{job.title}</h2>\r\n    <h4>\r\n      {job.company}{' '}\r\n      <ul className=\"list-disc p-4 m-0 inline-block\">\r\n        <li>{job.about.location} {job.id}</li>\r\n      </ul>\r\n    </h4>\r\n    <p>{job.description}</p>\r\n    <p>\r\n      Posted on:{' '}\r\n      {new Date(job.about.posted_on).toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n      })}\r\n    </p>\r\n  </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default CardComponent;\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAiCA,SAAS,cAAc,EAAE,GAAG,EAAS;IACjC,MAAM,SAAO,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;IACrB,MAAM,EAAC,cAAc,EAAC,GAAC,CAAA,GAAA,0HAAA,CAAA,SAAM,AAAD;IAC5B,MAAM,cAAY;QACd,eAAe;QACf,OAAO,IAAI,CAAC;IAChB;IACF,qBAEA,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BAAI,IAAI,KAAK;;;;;;0BACd,8OAAC;;oBACE,IAAI,OAAO;oBAAE;kCACd,8OAAC;wBAAG,WAAU;kCACZ,cAAA,8OAAC;;gCAAI,IAAI,KAAK,CAAC,QAAQ;gCAAC;gCAAE,IAAI,EAAE;;;;;;;;;;;;;;;;;;0BAGpC,8OAAC;0BAAG,IAAI,WAAW;;;;;;0BACnB,8OAAC;;oBAAE;oBACU;oBACV,IAAI,KAAK,IAAI,KAAK,CAAC,SAAS,EAAE,kBAAkB,CAAC,SAAS;wBACzD,MAAM;wBACN,OAAO;wBACP,KAAK;oBACP;;;;;;;;;;;;;AAMN;uCAEe","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/task4/job/app/page.tsx"],"sourcesContent":["import CardComponent from \"./components/CardComponent\";\ntype Posting = {\n  id:number;\n  title: string;\n  description: string;\n  responsibilities: string[];\n  ideal_candidate: {\n    age: string;\n    gender: string;\n    traits: string[];\n  };\n  when_where: string;\n  about: {\n    posted_on: Date;\n    deadline: Date;\n    location: string;\n    start_date: string;\n    end_date: string;\n    categories: string[];\n    required_skills: string[];\n  };\n  company: string;\n  image: string;\n};\n\ntype JobData = {\n  job_postings: Posting[];\n};\n\nexport default async function Home() {\n  const res = await fetch(\n    \"https://drive.google.com/uc?export=download&id=1QAObCWl5f0Ytc3bUHRREdNVBd4P-dO07\"\n  );\n\n  if (!res.ok) {\n    throw new Error(\"Failed to fetch job postings\");\n  }\n\n  let data;\n  try {\n    data = await res.json();\n  } catch (e) {\n    throw new Error(\"Response is not valid JSON\");\n  }\n\n  return (\n    <div>\n      {data.job_postings.map((job: Posting, index: number) => (\n        <CardComponent key={index} job={job} />\n      ))}\n    </div>\n  );\n}\n\n"],"names":[],"mappings":";;;;AAAA;;;AA6Be,eAAe;IAC5B,MAAM,MAAM,MAAM,MAChB;IAGF,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI;IACJ,IAAI;QACF,OAAO,MAAM,IAAI,IAAI;IACvB,EAAE,OAAO,GAAG;QACV,MAAM,IAAI,MAAM;IAClB;IAEA,qBACE,8OAAC;kBACE,KAAK,YAAY,CAAC,GAAG,CAAC,CAAC,KAAc,sBACpC,8OAAC,mIAAA,CAAA,UAAa;gBAAa,KAAK;eAAZ;;;;;;;;;;AAI5B","debugId":null}}]
}