{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/lib/jobs.ts"],"sourcesContent":["import {Posting,JobData} from '@/app/types/job'\r\nexport async function getAllJobPostings():Promise<Posting[]>{\r\n    const res = await fetch(\r\n    \"https://akil-backend.onrender.com/opportunities/search\",\r\n    {\r\n      cache: 'force-cache'\r\n    }\r\n  );\r\n   let rdata: JobData;\r\n  try {\r\n    rdata = await res.json();\r\n  } catch (e) {\r\n    console.error(\"Response is not valid JSON:\", e);\r\n    throw new Error(\"Failed to parse job postings data as JSON.\");\r\n  }\r\n\r\n  if (!rdata || !Array.isArray(rdata.data)) {\r\n    throw new Error(\"Job postings data is not in the expected format.\");\r\n  }\r\n  const job_postings_with_index: Posting[] = rdata.data.map((job, index) => ({\r\n    ...job,\r\n    id: index,\r\n    startDate: new Date(job.startDate),\r\n    endDate: new Date(job.endDate),\r\n    deadline: new Date(job.deadline),\r\n    datePosted: new Date(job.datePosted),\r\n    createdAt: new Date(job.createdAt),\r\n    updatedAt: new Date(job.updatedAt),\r\n  }));\r\n  return job_postings_with_index;\r\n\r\n}\r\nexport async function  getJobByIndex(index:number):Promise<Posting|undefined>{\r\n    const jo=await getAllJobPostings();\r\n    return jo.find(job=>job.id==index)\r\n}"],"names":[],"mappings":";;;;AACO,eAAe;IAClB,MAAM,MAAM,MAAM,MAClB,0DACA;QACE,OAAO;IACT;IAED,IAAI;IACL,IAAI;QACF,QAAQ,MAAM,IAAI,IAAI;IACxB,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI,CAAC,SAAS,CAAC,MAAM,OAAO,CAAC,MAAM,IAAI,GAAG;QACxC,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,0BAAqC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,QAAU,CAAC;YACzE,GAAG,GAAG;YACN,IAAI;YACJ,WAAW,IAAI,KAAK,IAAI,SAAS;YACjC,SAAS,IAAI,KAAK,IAAI,OAAO;YAC7B,UAAU,IAAI,KAAK,IAAI,QAAQ;YAC/B,YAAY,IAAI,KAAK,IAAI,UAAU;YACnC,WAAW,IAAI,KAAK,IAAI,SAAS;YACjC,WAAW,IAAI,KAAK,IAAI,SAAS;QACnC,CAAC;IACD,OAAO;AAET;AACO,eAAgB,cAAc,KAAY;IAC7C,MAAM,KAAG,MAAM;IACf,OAAO,GAAG,IAAI,CAAC,CAAA,MAAK,IAAI,EAAE,IAAE;AAChC","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/components/Log.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/Log.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Log.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/components/Log.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/Log.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Log.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,oCACA","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/tasks/task8/app/page.tsx"],"sourcesContent":["import { Posting } from \"./types/job\";\r\nimport ClientSorter from \"./components/ClientSorter\";\r\nimport { getAllJobPostings } from \"./lib/jobs\";\r\nimport { getServerSession } from \"next-auth\";\r\nimport LogoutButton from \"./components/Log\";\r\n\r\nexport default async function Home() {\r\n  const data: Posting[] = await getAllJobPostings();\r\n  const session = await getServerSession();\r\n\r\n  return (\r\n    <div className=\"gap-[40px] pt-[72px] pb-[72px] pl-[124px] pr-[123px]\">\r\n      {session ? (\r\n        <div className=\"mb-4 flex items-center justify-between\">\r\n          <p>Logged in as {session.user?.email}</p>\r\n          <LogoutButton />\r\n        </div>\r\n        \r\n      ) : (\r\n        <p>You are not logged in.</p>\r\n      )}\r\n\r\n     \r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;;;AAEe,eAAe;IAC5B,MAAM,OAAkB,MAAM,CAAA,GAAA,kHAAA,CAAA,oBAAiB,AAAD;IAC9C,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD;IAErC,qBACE,8OAAC;QAAI,WAAU;kBACZ,wBACC,8OAAC;YAAI,WAAU;;8BACb,8OAAC;;wBAAE;wBAAc,QAAQ,IAAI,EAAE;;;;;;;8BAC/B,8OAAC,yHAAA,CAAA,UAAY;;;;;;;;;;iCAIf,8OAAC;sBAAE;;;;;;;;;;;AAMX","debugId":null}}]
}