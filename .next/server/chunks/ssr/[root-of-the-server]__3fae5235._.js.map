{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/OneDrive/Desktop/task4/job/app/page.tsx"],"sourcesContent":["import CardComponent from \"./components/CardComponent\";\ntype Posting = {\n  id:number;\n  title: string;\n  description: string;\n  responsibilities: string[];\n  ideal_candidate: {\n    age: string;\n    gender: string;\n    traits: string[];\n  };\n  when_where: string;\n  about: {\n    posted_on: Date;\n    deadline: Date;\n    location: string;\n    start_date: string;\n    end_date: string;\n    categories: string[];\n    required_skills: string[];\n  };\n  company: string;\n  image: string;\n};\n\ntype JobData = {\n  job_postings: Posting[];\n};\n\nexport default async function Home() {\n  const res = await fetch(\n    \"https://drive.google.com/uc?export=download&id=1QAObCWl5f0Ytc3bUHRREdNVBd4P-dO07\"\n  );\n\n  if (!res.ok) {\n    throw new Error(\"Failed to fetch job postings\");\n  }\n\n  let data;\n  try {\n    data = await res.json();\n  } catch (e) {\n    throw new Error(\"Response is not valid JSON\");\n  }\n\n  return (\n    <div>\n      {data.job_postings.map((job: Posting, index: number) => (\n        <CardComponent key={index} job={job} />\n      ))}\n    </div>\n  );\n}\n\n"],"names":[],"mappings":";;;;AAAA;;;AA6Be,eAAe;IAC5B,MAAM,MAAM,MAAM,MAChB;IAGF,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI;IACJ,IAAI;QACF,OAAO,MAAM,IAAI,IAAI;IACvB,EAAE,OAAO,GAAG;QACV,MAAM,IAAI,MAAM;IAClB;IAEA,qBACE,8OAAC;kBACE,KAAK,YAAY,CAAC,GAAG,CAAC,CAAC,KAAc,sBACpC,8OAAC,mIAAA,CAAA,UAAa;gBAAa,KAAK;eAAZ;;;;;;;;;;AAI5B","debugId":null}}]
}